更新代码
24646@▒▒▒ϼ▒ MINGW64 /e/xcx (master)
$ git status

24646@▒▒▒ϼ▒ MINGW64 /e/xcx (master)
$ git add .

24646@▒▒▒ϼ▒ MINGW64 /e/xcx (master)
$ git commit -m "1"

24646@▒▒▒ϼ▒ MINGW64 /e/xcx (master)
$ git pull origin master --rebase

24646@▒▒▒ϼ▒ MINGW64 /e/xcx (master)
$ git push origin master

24646@▒▒▒ϼ▒

上传代码
git init

git add *

git commit -m ""

git/config
[user]
email=
name=

或是

git config --global user.name "runoob"
git config --global user.email test@runoob.com



git remote add origin your:https

git push -u origin master

更新代码到本地
git checkout master

git pull --rebase origin master

git reset --hard//丢弃本地修改，可选

git pull --rebase origin master

回溯历史版本
//查询历史版本号
git log --oneline

git reset --hard 上个命令查到历史版本号

git status 查看冲突文件
手动解决冲突后使用
# 1. 继续完成 rebase
git rebase --continue

# 2. 然后强制推送（因为 rebase 重写了历史）
git push --force-with-lease origin master

对于超过100mb文件的处理
# 第一步：查找大文件
echo "查找超过100MB的文件..."
find . -name ".git" -prune -o -type f -size +100M -print

# 第二步：手动删除或使用其他方法删除
# 如果确认要删除，运行：
find . -type f -size +100M -delete

工作区add暂存区commit版本库push远程仓库
git commit -m "Commit message"   # 将暂存区的更改提交到本地版本库
git log                          # 查看提交历史
git diff                         # 查看工作区和暂存区之间的差异
git diff --cached                # 查看暂存区和最后一次提交之间的差异

命令	说明
git add	添加文件到暂存区
git status	查看仓库当前的状态，显示有变更的文件。
git diff	比较文件的不同，即暂存区和工作区的差异。
git difftool	使用外部差异工具查看和比较文件的更改。
git range-diff	比较两个提交范围之间的差异。
git commit	提交暂存区到本地仓库。
git reset	回退版本。
git rm	将文件从暂存区和工作区中删除。
git mv	移动或重命名工作区文件。
git notes	添加注释。
git checkout	分支切换。
git switch （Git 2.23 版本引入）	更清晰地切换分支。
git restore （Git 2.23 版本引入）	恢复或撤销文件的更改。
git show	显示 Git 对象的详细信息。

$ # 强制推送（会覆盖远程的所有更改）
git push --force-with-lease origin master
